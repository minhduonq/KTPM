services:
  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    networks:
      - monitoring
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: '256M'

  ambassador:
    build:
      context: ./ambassador
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - gateway
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: '256M'

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: always
    networks:
      - gateway
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: '256M'

  api-fe-rate:
    build:
      context: ./api-fe-rate
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./api-fe-rate:/usr/src/app
    networks:
      - gateway
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: '256M'

  api-gold-price:
    build:
      context: ./api-gold-price
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    volumes:
      - ./api-gold-price:/usr/src/app
    networks:
      - gateway
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: '256M'

  api-gateway:
    build: ./api-gateway
    ports:
      - "3005:3005"
    environment:
      PORT: 3005
      GOLD_SERVICE_URL: http://api-gold-price:4000
      FOREX_SERVICE_URL: http://api-fe-rate:5000
    depends_on:
      - api-gold-price
      - api-fe-rate
    networks:
      - gateway
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: '256M'

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - monitoring
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: '256M'

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - monitoring
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: '512M'

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - monitoring
    depends_on:
      - prometheus
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: '256M'

networks:
  monitoring:
    driver: bridge
  gateway:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
  redis-data: